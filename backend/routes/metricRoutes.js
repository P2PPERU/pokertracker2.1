const express = require('express');
const router = express.Router();
const MetricController = require('../controllers/metricController');
const { verificarToken, verificarAdmin } = require('../middleware/authMiddleware'); // âœ… CORREGIDO

// Middleware de autenticaciÃ³n
router.use(verificarToken); // âœ… CORREGIDO

// Middleware para verificar que sea admin
const adminOnly = verificarAdmin; // âœ… SIMPLIFICADO

// ðŸ“ˆ RUTAS DE MÃ‰TRICAS

// GET /api/metrics/dashboard - MÃ©tricas principales del dashboard
router.get('/dashboard', adminOnly, MetricController.getDashboardMetrics);

// GET /api/metrics/historical - MÃ©tricas histÃ³ricas
router.get('/historical', adminOnly, MetricController.getHistoricalMetrics);

// GET /api/metrics/financial - MÃ©tricas financieras especÃ­ficas
router.get('/financial', adminOnly, MetricController.getFinancialMetrics);

// POST /api/metrics/calculate - Calcular mÃ©tricas manualmente
router.post('/calculate', adminOnly, MetricController.calculateMetrics);

// POST /api/metrics/recalculate - Recalcular todas las mÃ©tricas
router.post('/recalculate', adminOnly, MetricController.recalculateAllMetrics);

module.exports = router;